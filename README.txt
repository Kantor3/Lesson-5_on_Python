Домашние задание к Уроку-5.

hw_task1r.py
----------------
Задача 1.
Напишите программу, удаляющую из текста все слова, содержащие фрагмент "абв".


hw_task2r.py
----------------
Задача 2.
Создайте программу для игры с конфетами человек против человека.
Условие задачи: На столе лежит 2021 конфета. Играют два игрока
делая ход друг после друга. Первый ход определяется жеребьёвкой.
За один ход можно забрать не более чем 28 конфет.
Все конфеты оппонента достаются сделавшему последний ход.
Сколько конфет нужно взять первому игроку, чтобы забрать все конфеты у своего конкурента?

a) Добавьте игру против бота
b) Подумайте как наделить бота интеллектом".


hw_task3r.py
----------------
Задача 3.
Создайте программу для игры в "Крестики-нолики".


hw_task4r.py
----------------
Задача 4.
Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
Входные и выходные данные хранятся в отдельных текстовых файлах.
Строки для теста:
txt = 'beeeeeeeeeeeeeeer !! 123456789abcdefg уууууууфффффффффффффффффффффффффффффффффффф!'
txt = '11 222 333 123456789 77777777777777777'
txt_code = '1 2 3 123456789 7'


==========================================
Решение задач семинара к 5-му уроку
...

Task35_seminar.py:
-----------------
Задача 35
В файле находится N натуральных чисел, записанных через пробел.
Среди чисел не хватает одного, чтобы выполнялось условие A[i] - 1 = A[i-1].
Найдите это число.
test_data = [
["3 4 5 6 7 9 10 11 12", 8],
["3 4 6 7 8 9 10 11 12", 5],
["1 3", 2]

Task-36_seminar.py:
-----------------
Задача 36
Дан список чисел. Создайте список, в который попадают числа,
описывающие возрастающую последовательность.
Порядок элементов менять нельзя.
Пример:
[1, 5, 2, 3, 4, 6, 1, 7] => [1, 5, 6, 7]
test_data = [
[[1, 5, 2, 3, 4, 6, 1, 7], [1, 5, 6, 7]],
[[1, 2, 3, 4, 6, 1, 7], [1, 2, 3, 4, 6, 7]]
]
for nums, exp in test_data:
assert inc_sequence(nums) == exp
[1, 5, 6, 7]
[1, 2, 3, 4, 6, 7]

Task-37_seminar.py:
-----------------
Задача 37
...

Task-38_seminar.py:
-----------------
Задача 38.
Напишите программу, удаляющую из текста все слова, содержащие "абв".
test_data = [[["привет абв как абвышные дела?", "абв"], "привет как дела?"]]
